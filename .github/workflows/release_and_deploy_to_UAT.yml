name: Merge and Deploy Release to UAT Synapse

on:
  push:
    branches:
      - workspace_publish

jobs:
  merge-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the workspace_publish branch and fetch all branches
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch all branches

      - name: Fetch all branches
        run: git fetch --all

      # Step 2: Merge workspace_publish into main
      - name: Merge workspace_publish to main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout main
          git merge workspace_publish --no-ff --allow-unrelated-histories
          git push origin main

      # Step 3: Check if release branch exists and delete it if found
      - name: Delete existing release branch if it exists
        run: |
          $date = Get-Date -Format "MM-dd-yyyy"
          $release_branch_name = "release-$date"
          if (git ls-remote --exit-code --heads origin $release_branch_name) {
            git push origin --delete $release_branch_name
          }

      # Step 4: Create a new release branch with the current date
      - name: Create new release branch
        run: |
          $date = Get-Date -Format "MM-dd-yyyy"
          $release_branch_name = "release-$date"
          git checkout -b $release_branch_name
          git push origin $release_branch_name

  deploy-to-uat:
    needs: merge-and-release
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the newly created release branch (using PowerShell to resolve date)
      - name: Checkout release branch
        run: |
          $date = Get-Date -Format "MM-dd-yyyy"
          $release_branch_name = "release-$date"
          git checkout $release_branch_name
        shell: pwsh

      # Step 2: Deploy the release branch to UAT Synapse
      - name: Synapse workspace deployment
        uses: azure/synapse-workspace-deployment@release-1.0
        with:
          TargetWorkspaceName: 'uat--synapseworkspace'  # UAT Synapse workspace
          TemplateFile: './dev--synapseworkspace/TemplateForWorkspace.json'
          ParametersFile: './dev--synapseworkspace/TemplateParametersForWorkspace.json'
          environment: 'Azure Public'
          resourceGroup: 'di_msft_offshore_sandbox'
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          tenantId: ${{ secrets.TENANT_ID }}
          DeleteArtifactsNotInTemplate: 'false'
